<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Diffie-Hellman Key Exchange</title>
</head>
<body>
    <h1>Diffie-Hellman Key Exchange</h1>
    <div>
        <label for="prime">Prime (p):</label>
        <input type="text" id="prime" value="23"><br>
        <label for="base">Base (g):</label>
        <input type="text" id="base" value="5"><br>
        <label for="secretA">Alice's Secret Key (a):</label>
        <input type="text" id="secretA" value="6"><br>
        <button onclick="generatePublicKey()">Generate Public Key</button><br>
        <label for="publicKeyA">Alice's Public Key (A):</label>
        <input type="text" id="publicKeyA" readonly><br>
        <label for="publicKeyB">Bob's Public Key (B):</label>
        <input type="text" id="publicKeyB"><br>
        <button onclick="calculateSharedSecret()">Calculate Shared Secret</button><br>
        <label for="sharedSecret">Shared Secret:</label>
        <input type="text" id="sharedSecret" readonly>
    </div>

    <script>
        function generatePublicKey() {
            var prime = BigInt(document.getElementById("prime").value);
            var base = BigInt(document.getElementById("base").value);
            var secretA = BigInt(document.getElementById("secretA").value);

            var A = bigIntModPow(base, secretA, prime);
            document.getElementById("publicKeyA").value = A.toString();
        }

        function calculateSharedSecret() {
            var prime = BigInt(document.getElementById("prime").value);
            var publicKeyB = BigInt(document.getElementById("publicKeyB").value);
            var secretA = BigInt(document.getElementById("secretA").value);

            var sharedSecret = bigIntModPow(publicKeyB, secretA, prime);
            document.getElementById("sharedSecret").value = sharedSecret.toString();
        }

        // Custom modPow function since BigInt doesn't have built-in modPow
        function bigIntModPow(base, exponent, modulus) {
            let result = BigInt(1);
            base = base % modulus;
            while (exponent > 0) {
                if (exponent % BigInt(2) === BigInt(1)) {
                    result = (result * base) % modulus;
                }
                exponent = exponent / BigInt(2);
                base = (base * base) % modulus;
            }
            return result;
        }
    </script>
</body>
</html>
